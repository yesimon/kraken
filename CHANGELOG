v1.1:
* added --out-fmt paired and --out-fmt interleaved to allow paired reads
  to be separated when using --[un]classified-out options
* updated MANUAL.html to reflect additional options. 

v1.0:
* removed dependence on GI numbers
* using taxonomy nucl_*.accession2taxid maps to create seqid2taxid maps
* changed kraken-build --download method to use rsync

v0.10.6-beta:
* fixed overflow bug in command line parsing
* fixed GRCh38.p2 bug in human genome downloads
* fixed installation exit code bug

v0.10.5-beta:
* fix bug in GRCh38 download to handle multi-fasta files
* add --header-line and --intermediate-ranks options to kraken-mpa-report
* improved support for adding multi-FASTA files with --add-to-library
* allow assigning taxon IDs in reference sequences w/o GI numbers
  using "kraken:taxid" code
* included full sequence descriptions when using "--[un]classified-out"
* reduced memory usage of db_shrink (Build step 2 / kraken-build --shrink)
* reduced memory usage of db_sort (Build step 3)
* reduced memory usage of set_lcas (Build step 6)
* support added for KRAKEN_NUM_THREADS, KRAKEN_DB_PATH, and KRAKEN_DEFAULT_DB
  env. variables
* added kraken-translate for getting taxonomic names for each sequence
* added a --rebuild option to kraken-build
* turned off default name checking for PE reads; added --check-names option
* added plasmids to --download-library options
* added HTML manual, redirecting README to that

v0.10.4-beta:
* use GRCh38 for human genome library
* enable input via stdin (via /dev/fd/0)
* enable compressed (gzip/bzip2) input
* enable auto-detection of fasta/fastq/gz/bz2
* simplified add_to_library.sh code to speed up large additions
* use RNA genomes for viral genome library
* scan .ffn (RNA) files for genomic data when building databases
* handle paired-end reads with --paired option
* provide MetaPhlAn-compatible output with kraken-mpa-report
* added domain/kingdom codes to kraken-report
* added kraken-filter script for simple confidence scoring
* added support for multi-FASTA files in custom DBs
* fixed build_kraken_db.sh bug for k-mers w/ k < 31
* updates to README file

v0.10.3-beta:
* remove Fatal.pm use in kraken-report
* fixed false success message on make failure in installer
* explicitly require g++ as C++ compiler in Makefile
* change to quickfile.cpp to do proper syncing on close
* fixed kraken-build bug w/ --work-on-disk (cause of some major build stalls)
* changed hash size calculation to use Perl
* close input files explicitly in db_sort/db_shrink to reduce reported memory
* allow db_shrink to work in RAM
* updates to README file

v0.10.2-beta:
* fixed kraken-report bug w/ --show-zeros
* fixed kraken-report installation bug
* updates to README file

v0.10.1-beta:
* fixed 2nd bug in build_kraken.sh in calculating hash size (thanks T. Antao)
* fixed bug in add_to_library.sh for some bash versions (thanks T. Antao)
* fixed issue where search window wasn't cached until a failure (query speedup)
* added $KRAKEN_DIR fallback for kraken/kraken-build (thanks S. Koren)

v0.10.0-beta:
* added CHANGELOG
* fixed quick mode hit list output
* updated README citation
* changed minimizer sort order (query speedup), changes database structure
* use linear search with small windows (query speedup)
* changed query procedure (query speedup); search w/o 1st calculating minimizer
* changed readlink in installer to perl Cwd::abs_path (portability)
* removed MAP_POPULATE for preloading, uses read loop instead (bugfix/port.)
* added --work-on-disk switch to kraken-build
* added kraken-report script
* fixed bug in build_kraken.sh in calculating hash size (thanks T. Antao)

v0.9.1b:
* fixed bug to allow kraken-build --shrink

v0.9.0b:
* full rewrite
* minimizers used to speed queries, prefix index removed

v0.3:
* DB build parallelized, Jellyfish removed from LCA assignment

v0.2:
* full rewrite, most progs. changed to C++
* Jellyfish removed from classification step
* prefix index used to speed queries

v0.1:
* initial version, mostly Perl
